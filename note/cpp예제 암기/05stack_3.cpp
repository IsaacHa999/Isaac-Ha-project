// 옥상 정원 꾸미기
/**
 * 문제
 * N개의 빌딩이 일렬로 세워져 있다. 빌딩의 세로 길이는 모두 같고, 가로의 길이는 1이다. 이 빌딩들을 이용하여 정원을 만들려고 한다. 정원은 빌딩들의 가로 방향으로 만들어지며, 빌딩들의 세로 방향으로 만들어지는 정원은 없다. 또한 정원의 바닥은 평평해야 한다. 정원의 높이는 정원을 만드는 데 사용하는 빌딩들의 최대 높이와 같다. 정원의 높이가 H라고 하면, 정원의 높이가 H인 빌딩들의 정원의 가로 방향으로 연속된 부분을 정원이라고 한다. 정원의 높이가 H보다 작은 빌딩들의 정원의 가로 방향으로 연속된 부분은 정원이 아니다. 또한 빌딩들의 정원은 서로 겹칠 수 없다. 정원의 높이가 1부터 N까지 변할 때, 각각의 높이에 대하여 정원의 개수를 구하는 프로그램을 작성하시오.
 * 문제 분석:
 * 1. 분석 기술: 능동적 해석 vs 수동적 해서
 *  1) 능동적 해석: A[i]가 볼 수 있는 빌딩의 수를 구하는 관점
 *  2) 수동적 해석: A[i]를 볼 수 있는 빌딩의 수를 구하는 관점
 * 2. 스택인 것을 파악하기
 *  최대값만 활용해서 문제를 풀 수 있으므로 스택을 활용한다.
 */

#include <bits/stdc++.h>
using namespace std;

#define ll long long

stack<int> s;
int n;
ll ans;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;
    ll h;

    while (n--)
    {
        cin >> h;
        while (!s.empty() && s.top() <= h) // 스택이 비어있지 않고, 스택의 top이 h보다 작거나 같으면 pop, 내림차순으로 만들기
            s.pop();

        ans += s.size(); // s.size()는 s.top()보다 작은 값 제외 내림차순으로 쌓인 빌딩의 수
        
        s.push(h);
    }
    cout << ans;
    return 0;
}